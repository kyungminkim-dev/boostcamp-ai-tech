{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"cnn.ipynb의 사본","provenance":[{"file_id":"https://github.com/sjchoi86/upstage-basic-deeplearning/blob/main/notebook/cnn.ipynb","timestamp":1612354148352}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"f0d8832d21bf41f3b82ada66a0bb302d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_6698e6aee86244a4bfbf1bc9e9ea3269","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_7dd748300ad544a18f611c37469400b0","IPY_MODEL_817b9554f7674c47b61f5d2a48c91ea5"]}},"6698e6aee86244a4bfbf1bc9e9ea3269":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7dd748300ad544a18f611c37469400b0":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_6cb870f65eaa430e8c251b66464a146f","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"info","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_334d6254e61e4a0fa36f0fce06880d4b"}},"817b9554f7674c47b61f5d2a48c91ea5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_7a435f6467fb4f0eb50f5d3738bde94c","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 9920512/? [00:20&lt;00:00, 1113351.26it/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_1613b4c5364a41c192fa8f2eb0f32a21"}},"6cb870f65eaa430e8c251b66464a146f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"334d6254e61e4a0fa36f0fce06880d4b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7a435f6467fb4f0eb50f5d3738bde94c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"1613b4c5364a41c192fa8f2eb0f32a21":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"fad930110bb84a809b0c09e0e1841532":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_223e23bd67644b5d9cc8c41bd13db692","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_2b30927cca5e4eff8cb90f4b27ea7192","IPY_MODEL_4752b9a106e0476385dc0816c55b1e46"]}},"223e23bd67644b5d9cc8c41bd13db692":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"2b30927cca5e4eff8cb90f4b27ea7192":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_3a78ced08104469a928a5d9bf2b4938e","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"info","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_a88e2da3e3a84fd08741294b28f735c4"}},"4752b9a106e0476385dc0816c55b1e46":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_2bef1e3b30e8409895b5321b952aece2","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 32768/? [00:20&lt;00:00, 92774.02it/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_1c6805b5c0e24f9d94ff25b832b0ea63"}},"3a78ced08104469a928a5d9bf2b4938e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"a88e2da3e3a84fd08741294b28f735c4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"2bef1e3b30e8409895b5321b952aece2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"1c6805b5c0e24f9d94ff25b832b0ea63":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7e4560aab5af4fe59bf9ebdc7e5bda31":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_bb5343bf6d1347b392419f8e2bbf1a1d","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_7f220143324940cab8815f1449ab09b7","IPY_MODEL_454f950990584ec796f9b30b33d09503"]}},"bb5343bf6d1347b392419f8e2bbf1a1d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7f220143324940cab8815f1449ab09b7":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_8eb11429d744458e805ace0e1842f1b4","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_12d8271c3bf54540a2ab63c2f2dda817"}},"454f950990584ec796f9b30b33d09503":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_d074fce1a87f45c5b2057bc2f81ecc42","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 1654784/? [00:02&lt;00:00, 728065.63it/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_43a540ec1e914032b46c0b8f2305f9ea"}},"8eb11429d744458e805ace0e1842f1b4":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"12d8271c3bf54540a2ab63c2f2dda817":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"d074fce1a87f45c5b2057bc2f81ecc42":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"43a540ec1e914032b46c0b8f2305f9ea":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"20e9339877b544f682803425549cb437":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_72eb271645d34b7aa64fe4b267d2bce6","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_1e14aafbd72b4e53ba3eecfe3ca43f7e","IPY_MODEL_57841daaada64c648fd72b0f109e0531"]}},"72eb271645d34b7aa64fe4b267d2bce6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"1e14aafbd72b4e53ba3eecfe3ca43f7e":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_2aef2fee5632416886701b872352a166","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_b35a8f8146134d11a97ea615b1ea190f"}},"57841daaada64c648fd72b0f109e0531":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_bc481d971eaa4f199030940b60253c83","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 8192/? [00:00&lt;00:00, 15177.49it/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_22d59415cc03408cb63aca758f696b22"}},"2aef2fee5632416886701b872352a166":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"b35a8f8146134d11a97ea615b1ea190f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"bc481d971eaa4f199030940b60253c83":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"22d59415cc03408cb63aca758f696b22":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"oGfS2g6XvFEw"},"source":["<table class=\"tfo-notebook-buttons\" align=\"left\">\n","  <td>\n","    <a target=\"_blank\" href=\"https://colab.research.google.com/github/sjchoi86/upstage-basic-deeplearning/blob/main/notebook/cnn.ipynb\"><img src=\"https://www.tensorflow.org/images/colab_logo_32px.png\" />Colab</a>\n","  </td>\n","  <td>\n","    <a target=\"_blank\" href=\"https://github.com/sjchoi86/upstage-basic-deeplearning/blob/main/notebook/cnn.ipynb\"><img src=\"https://www.tensorflow.org/images/GitHub-Mark-32px.png\" />View Source</a>\n","  </td>\n","</table>"]},{"cell_type":"markdown","metadata":{"id":"FJIOvMYGLFH6"},"source":["# Convolutional Neural Network (CNN)"]},{"cell_type":"code","metadata":{"id":"khkLmD7yK_ei","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1613213118062,"user_tz":-540,"elapsed":5336,"user":{"displayName":"김경민","photoUrl":"","userId":"07831797358466108774"}},"outputId":"2f9ded47-b4b1-4a9c-cebf-d0057b703799"},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","import torch.nn.functional as F\n","%matplotlib inline\n","%config InlineBackend.figure_format='retina'\n","print (\"PyTorch version:[%s].\"%(torch.__version__))\n","device = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')\n","print (\"device:[%s].\"%(device))"],"execution_count":1,"outputs":[{"output_type":"stream","text":["PyTorch version:[1.7.0+cu101].\n","device:[cuda:0].\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"aciwjqf7MsTa"},"source":["### Dataset"]},{"cell_type":"code","metadata":{"id":"GojZi6XMLZZ5","colab":{"base_uri":"https://localhost:8080/","height":723,"referenced_widgets":["f0d8832d21bf41f3b82ada66a0bb302d","6698e6aee86244a4bfbf1bc9e9ea3269","7dd748300ad544a18f611c37469400b0","817b9554f7674c47b61f5d2a48c91ea5","6cb870f65eaa430e8c251b66464a146f","334d6254e61e4a0fa36f0fce06880d4b","7a435f6467fb4f0eb50f5d3738bde94c","1613b4c5364a41c192fa8f2eb0f32a21","fad930110bb84a809b0c09e0e1841532","223e23bd67644b5d9cc8c41bd13db692","2b30927cca5e4eff8cb90f4b27ea7192","4752b9a106e0476385dc0816c55b1e46","3a78ced08104469a928a5d9bf2b4938e","a88e2da3e3a84fd08741294b28f735c4","2bef1e3b30e8409895b5321b952aece2","1c6805b5c0e24f9d94ff25b832b0ea63","7e4560aab5af4fe59bf9ebdc7e5bda31","bb5343bf6d1347b392419f8e2bbf1a1d","7f220143324940cab8815f1449ab09b7","454f950990584ec796f9b30b33d09503","8eb11429d744458e805ace0e1842f1b4","12d8271c3bf54540a2ab63c2f2dda817","d074fce1a87f45c5b2057bc2f81ecc42","43a540ec1e914032b46c0b8f2305f9ea","20e9339877b544f682803425549cb437","72eb271645d34b7aa64fe4b267d2bce6","1e14aafbd72b4e53ba3eecfe3ca43f7e","57841daaada64c648fd72b0f109e0531","2aef2fee5632416886701b872352a166","b35a8f8146134d11a97ea615b1ea190f","bc481d971eaa4f199030940b60253c83","22d59415cc03408cb63aca758f696b22"]},"executionInfo":{"status":"ok","timestamp":1613213130703,"user_tz":-540,"elapsed":17967,"user":{"displayName":"김경민","photoUrl":"","userId":"07831797358466108774"}},"outputId":"fd5deeb2-2084-473a-a5a7-75d10c8f11e2"},"source":["from torchvision import datasets,transforms\n","mnist_train = datasets.MNIST(root='./data/',train=True,transform=transforms.ToTensor(),download=True)\n","mnist_test = datasets.MNIST(root='./data/',train=False,transform=transforms.ToTensor(),download=True)\n","print (\"mnist_train:\\n\",mnist_train,\"\\n\")\n","print (\"mnist_test:\\n\",mnist_test,\"\\n\")\n","print (\"Done.\")"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Downloading http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz to ./data/MNIST/raw/train-images-idx3-ubyte.gz\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f0d8832d21bf41f3b82ada66a0bb302d","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=1.0, bar_style='info', max=1.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Extracting ./data/MNIST/raw/train-images-idx3-ubyte.gz to ./data/MNIST/raw\n","Downloading http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz to ./data/MNIST/raw/train-labels-idx1-ubyte.gz\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fad930110bb84a809b0c09e0e1841532","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=1.0, bar_style='info', max=1.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Extracting ./data/MNIST/raw/train-labels-idx1-ubyte.gz to ./data/MNIST/raw\n","Downloading http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz to ./data/MNIST/raw/t10k-images-idx3-ubyte.gz\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7e4560aab5af4fe59bf9ebdc7e5bda31","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=1.0, bar_style='info', max=1.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Extracting ./data/MNIST/raw/t10k-images-idx3-ubyte.gz to ./data/MNIST/raw\n","Downloading http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz to ./data/MNIST/raw/t10k-labels-idx1-ubyte.gz\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"20e9339877b544f682803425549cb437","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=1.0, bar_style='info', max=1.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Extracting ./data/MNIST/raw/t10k-labels-idx1-ubyte.gz to ./data/MNIST/raw\n","Processing...\n","\n","\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/torchvision/datasets/mnist.py:480: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /pytorch/torch/csrc/utils/tensor_numpy.cpp:141.)\n","  return torch.from_numpy(parsed.astype(m[2], copy=False)).view(*s)\n"],"name":"stderr"},{"output_type":"stream","text":["Done!\n","mnist_train:\n"," Dataset MNIST\n","    Number of datapoints: 60000\n","    Root location: ./data/\n","    Split: Train\n","    StandardTransform\n","Transform: ToTensor() \n","\n","mnist_test:\n"," Dataset MNIST\n","    Number of datapoints: 10000\n","    Root location: ./data/\n","    Split: Test\n","    StandardTransform\n","Transform: ToTensor() \n","\n","Done.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"vD9uNmGDN3Fx"},"source":["### Data Iterator"]},{"cell_type":"code","metadata":{"id":"kt2NQt92LaP8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1613213130704,"user_tz":-540,"elapsed":17962,"user":{"displayName":"김경민","photoUrl":"","userId":"07831797358466108774"}},"outputId":"c92ef61a-e875-4516-ca37-22daa23728c4"},"source":["BATCH_SIZE = 256\n","train_iter = torch.utils.data.DataLoader(mnist_train,batch_size=BATCH_SIZE,shuffle=True,num_workers=1)\n","test_iter = torch.utils.data.DataLoader(mnist_test,batch_size=BATCH_SIZE,shuffle=True,num_workers=1)\n","print (\"Done.\")"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Done.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Kx8FI2g3ONca"},"source":["### Define Model"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"j2TN5OY8_fZj","executionInfo":{"status":"ok","timestamp":1613217891197,"user_tz":-540,"elapsed":949,"user":{"displayName":"김경민","photoUrl":"","userId":"07831797358466108774"}},"outputId":"4819f742-a828-488c-cc9a-751bce55e1e7"},"source":["ex1 = mnist_test.data[0]\r\n","clayer = nn.Conv2d(in_channels = 1, out_channels = 1, kernel_size=3, stride=1) #input 차원을 바꿔줘야함 28 * 28 -> 1 * 1 * 28 * 28\r\n","#plt.imshow(ex1)\r\n","#print(ex1.size())\r\n","input = torch.randn(1,1,28,28)\r\n","temp = input.squeeze()\r\n","temp = temp.squeeze()\r\n","#print(type(temp[0][0]))\r\n","plt.imshow(temp)\r\n","output = clayer(input)\r\n","output = output.squeeze()\r\n","output = output.squeeze()\r\n","#print(output.size())\r\n","plt.imshow(output.detach().numpy())\r\n","\r\n","\r\n","\r\n","\r\n","\r\n","#ex1 = ex1.unsqueeze(0)\r\n","#ex1 = ex1.unsqueeze(0)\r\n","#print(ex1)\r\n","#res = clayer(ex1)\r\n","#print(res)\r\n","\r\n","\r\n"],"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f77835cd588>"]},"metadata":{"tags":[]},"execution_count":84},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"image/png":{"width":253,"height":248},"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"hMBOgjaVLalV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1613216483464,"user_tz":-540,"elapsed":11082,"user":{"displayName":"김경민","photoUrl":"","userId":"07831797358466108774"}},"outputId":"9b5407c5-8bd2-4d52-8e9c-5d8bb5d939ec"},"source":["class ConvolutionalNeuralNetworkClass(nn.Module):\n","    \"\"\"\n","        Convolutional Neural Network (CNN) Class\n","    \"\"\"\n","    def __init__(self,name='cnn',xdim=[1,28,28],\n","                 ksize=3,cdims=[32,64],hdims=[1024,128],ydim=10,\n","                 USE_BATCHNORM=False):\n","        super(ConvolutionalNeuralNetworkClass,self).__init__()\n","        self.name = name\n","        self.xdim = xdim\n","        self.ksize = ksize\n","        self.cdims = cdims\n","        self.hdims = hdims\n","        self.ydim = ydim\n","        self.USE_BATCHNORM = USE_BATCHNORM\n","\n","        # Convolutional layers\n","        self.layers = []\n","        prev_cdim = self.xdim[0]\n","        for cdim in self.cdims: # for each hidden layer\n","            self.layers.append(\n","                nn.Conv2d(\n","                    # FILL IN HERE\n","                     in_channels=prev_cdim,\n","                     out_channels=cdim,\n","                     kernel_size=self.ksize,\n","                     stride=(1,1),\n","                     padding=self.ksize//2)\n","                ) # convlution \n","            if self.USE_BATCHNORM:\n","                self.layers.append(nn.BatchNorm2d(cdim)) # batch-norm\n","            self.layers.append(nn.ReLU(True))  # activation\n","            self.layers.append(nn.MaxPool2d(kernel_size=(2,2), stride=(2,2))) # max-pooling \n","            self.layers.append(nn.Dropout2d(p=0.5))  # dropout\n","            prev_cdim = cdim\n","\n","        # Dense layers\n","        self.layers.append(nn.Flatten())\n","        prev_hdim = prev_cdim*(self.xdim[1]//(2**len(self.cdims)))*(self.xdim[2]//(2**len(self.cdims))) #64 * 7 * 7\n","        for hdim in self.hdims:\n","            self.layers.append(nn.Linear(\n","                # FILL IN HERE\n","                prev_hdim,\n","                hdim,\n","                bias = True\n","                               ))\n","            self.layers.append(nn.ReLU(True))  # activation\n","            prev_hdim = hdim\n","        # Final layer (without activation)\n","        self.layers.append(nn.Linear(prev_hdim,self.ydim,bias=True))\n","\n","        # Concatenate all layers \n","        self.net = nn.Sequential()\n","        for l_idx,layer in enumerate(self.layers):\n","            layer_name = \"%s_%02d\"%(type(layer).__name__.lower(),l_idx)\n","            self.net.add_module(layer_name,layer)\n","        self.init_param() # initialize parameters\n","        \n","    def init_param(self):\n","        for m in self.modules():\n","            if isinstance(m,nn.Conv2d): # init conv\n","                nn.init.kaiming_normal_(m.weight)\n","                nn.init.zeros_(m.bias)\n","            elif isinstance(m,nn.BatchNorm2d): # init BN\n","                nn.init.constant_(m.weight,1)\n","                nn.init.constant_(m.bias,0)\n","            elif isinstance(m,nn.Linear): # lnit dense\n","                nn.init.kaiming_normal_(m.weight)\n","                nn.init.zeros_(m.bias)\n","            \n","    def forward(self,x):\n","        return self.net(x)\n","\n","C = ConvolutionalNeuralNetworkClass(\n","    name='cnn',xdim=[1,28,28],ksize=3,cdims=[32,64],\n","    hdims=[32],ydim=10).to(device)\n","loss = nn.CrossEntropyLoss()\n","optm = optim.Adam(C.parameters(),lr=1e-3)\n","print (\"Done.\")"],"execution_count":42,"outputs":[{"output_type":"stream","text":["Done.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Gd4GqagEaaxP"},"source":["### Check Parameters"]},{"cell_type":"code","metadata":{"id":"s9JhupRpaahm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612354591719,"user_tz":-540,"elapsed":538,"user":{"displayName":"김경민","photoUrl":"","userId":"07831797358466108774"}},"outputId":"f684d995-e3b2-44e9-e93e-0f93690338be"},"source":["np.set_printoptions(precision=3)\n","n_param = 0\n","for p_idx,(param_name,param) in enumerate(C.named_parameters()):\n","    if param.requires_grad:\n","        param_numpy = param.detach().cpu().numpy() # to numpy array \n","        n_param += len(param_numpy.reshape(-1))\n","        print (\"[%d] name:[%s] shape:[%s].\"%(p_idx,param_name,param_numpy.shape))\n","        print (\"    val:%s\"%(param_numpy.reshape(-1)[:5]))\n","print (\"Total number of parameters:[%s].\"%(format(n_param,',d')))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[0] name:[net.conv2d_00.weight] shape:[(32, 1, 3, 3)].\n","    val:[-0.217  0.451  0.339 -0.464 -0.438]\n","[1] name:[net.conv2d_00.bias] shape:[(32,)].\n","    val:[0. 0. 0. 0. 0.]\n","[2] name:[net.conv2d_04.weight] shape:[(64, 32, 3, 3)].\n","    val:[0.094 0.09  0.001 0.013 0.055]\n","[3] name:[net.conv2d_04.bias] shape:[(64,)].\n","    val:[0. 0. 0. 0. 0.]\n","[4] name:[net.linear_09.weight] shape:[(32, 3136)].\n","    val:[ 0.023  0.007  0.003 -0.005 -0.008]\n","[5] name:[net.linear_09.bias] shape:[(32,)].\n","    val:[0. 0. 0. 0. 0.]\n","[6] name:[net.linear_11.weight] shape:[(10, 32)].\n","    val:[ 0.214 -0.028  0.052  0.064 -0.446]\n","[7] name:[net.linear_11.bias] shape:[(10,)].\n","    val:[0. 0. 0. 0. 0.]\n","Total number of parameters:[119,530].\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"i574DsE8Z039"},"source":["### Simple Forward Path of the CNN Model"]},{"cell_type":"code","metadata":{"id":"GTwD0Bk3hSQB"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cJl7XSQMORAZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612354599194,"user_tz":-540,"elapsed":543,"user":{"displayName":"김경민","photoUrl":"","userId":"07831797358466108774"}},"outputId":"d9b26a37-ff06-43b6-d591-8b11ad491e54"},"source":["np.set_printoptions(precision=3)\n","torch.set_printoptions(precision=3)\n","x_numpy = np.random.rand(2,1,28,28)\n","x_torch = torch.from_numpy(x_numpy).float().to(device)\n","y_torch = C.forward(x_torch) # forward path\n","y_numpy = y_torch.detach().cpu().numpy() # torch tensor to numpy array\n","print (\"x_torch:\\n\",x_torch)\n","print (\"y_torch:\\n\",y_torch)\n","print (\"\\nx_numpy %s:\\n\"%(x_numpy.shape,),x_numpy)\n","print (\"y_numpy %s:\\n\"%(y_numpy.shape,),y_numpy)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["x_torch:\n"," tensor([[[[0.436, 0.398, 0.237,  ..., 0.048, 0.137, 0.458],\n","          [0.392, 0.601, 0.530,  ..., 0.008, 0.060, 0.957],\n","          [0.279, 0.898, 0.099,  ..., 0.898, 0.180, 0.958],\n","          ...,\n","          [0.947, 0.166, 0.866,  ..., 0.360, 0.949, 0.804],\n","          [0.166, 0.177, 0.239,  ..., 0.330, 0.811, 0.818],\n","          [0.813, 0.052, 0.202,  ..., 0.706, 0.351, 0.995]]],\n","\n","\n","        [[[0.804, 0.337, 0.813,  ..., 0.808, 0.638, 0.039],\n","          [0.658, 0.412, 0.612,  ..., 0.045, 0.094, 0.078],\n","          [0.971, 0.927, 0.527,  ..., 0.824, 0.515, 0.284],\n","          ...,\n","          [0.086, 0.157, 0.639,  ..., 0.481, 0.033, 0.254],\n","          [0.644, 0.909, 0.585,  ..., 0.312, 0.267, 0.581],\n","          [0.964, 0.662, 0.893,  ..., 0.303, 0.175, 0.224]]]], device='cuda:0')\n","y_torch:\n"," tensor([[ 3.411,  2.968, -2.739, -1.908,  0.354, -4.521,  2.462,  0.576, -3.035,\n","         -3.554],\n","        [ 2.975, -2.308, -0.654, -2.707, -0.494,  0.384,  0.087,  0.520, -1.364,\n","         -2.133]], device='cuda:0', grad_fn=<AddmmBackward>)\n","\n","x_numpy (2, 1, 28, 28):\n"," [[[[0.436 0.398 0.237 ... 0.048 0.137 0.458]\n","   [0.392 0.601 0.53  ... 0.008 0.06  0.957]\n","   [0.279 0.898 0.099 ... 0.898 0.18  0.958]\n","   ...\n","   [0.947 0.166 0.866 ... 0.36  0.949 0.804]\n","   [0.166 0.177 0.239 ... 0.33  0.811 0.818]\n","   [0.813 0.052 0.202 ... 0.706 0.351 0.995]]]\n","\n","\n"," [[[0.804 0.337 0.813 ... 0.808 0.638 0.039]\n","   [0.658 0.412 0.612 ... 0.045 0.094 0.078]\n","   [0.971 0.927 0.527 ... 0.824 0.515 0.284]\n","   ...\n","   [0.086 0.157 0.639 ... 0.481 0.033 0.254]\n","   [0.644 0.909 0.585 ... 0.312 0.267 0.581]\n","   [0.964 0.662 0.893 ... 0.303 0.175 0.224]]]]\n","y_numpy (2, 10):\n"," [[ 3.411  2.968 -2.739 -1.908  0.354 -4.521  2.462  0.576 -3.035 -3.554]\n"," [ 2.975 -2.308 -0.654 -2.707 -0.494  0.384  0.087  0.52  -1.364 -2.133]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"9-qCaXAKcOLx"},"source":["### Evaluation Function"]},{"cell_type":"code","metadata":{"id":"q9LmS7OqcNzh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612354604205,"user_tz":-540,"elapsed":549,"user":{"displayName":"김경민","photoUrl":"","userId":"07831797358466108774"}},"outputId":"24bab4de-0f25-42fa-a7d4-0ac5518a4b33"},"source":["def func_eval(model,data_iter,device):\n","    with torch.no_grad():\n","        n_total,n_correct = 0,0\n","        model.eval() # evaluate (affects DropOut and BN)\n","        for batch_in,batch_out in data_iter:\n","            y_trgt = batch_out.to(device)\n","            model_pred = model(batch_in.view(-1,1,28,28).to(device))\n","            _,y_pred = torch.max(model_pred.data,1)\n","            n_correct += (y_pred==y_trgt).sum().item()\n","            n_total += batch_in.size(0)\n","        val_accr = (n_correct/n_total)\n","        model.train() # back to train mode \n","    return val_accr\n","print (\"Done\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Done\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"iy7XZ21CiNZA"},"source":["### Initial Evaluation"]},{"cell_type":"code","metadata":{"id":"EMR1DaAyLa5Y","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612354616215,"user_tz":-540,"elapsed":6169,"user":{"displayName":"김경민","photoUrl":"","userId":"07831797358466108774"}},"outputId":"fa720796-5338-49c0-9c08-beec5165ca47"},"source":["C.init_param() # initialize parameters\n","train_accr = func_eval(C,train_iter,device)\n","test_accr = func_eval(C,test_iter,device)\n","print (\"train_accr:[%.3f] test_accr:[%.3f].\"%(train_accr,test_accr))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["train_accr:[0.104] test_accr:[0.103].\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"c6s_S4BIipcT"},"source":["### Train"]},{"cell_type":"code","metadata":{"id":"2LNJOJVCiO3k","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612354812684,"user_tz":-540,"elapsed":108552,"user":{"displayName":"김경민","photoUrl":"","userId":"07831797358466108774"}},"outputId":"f429ad80-5214-4a98-c8f7-44cf4f4b85a1"},"source":["print (\"Start training.\")\n","C.init_param() # initialize parameters\n","C.train() # to train mode \n","EPOCHS,print_every = 10,1\n","for epoch in range(EPOCHS):\n","    loss_val_sum = 0\n","    for batch_in,batch_out in train_iter:\n","        # Forward path\n","        y_pred = C.forward(batch_in.view(-1,1,28,28).to(device))\n","        loss_out = loss(y_pred,batch_out.to(device))\n","        # Update\n","        # FILL IN HERE      # reset gradient \n","        optm.zero_grad()\n","        # FILL IN HERE      # backpropagate\n","        loss_out.backward()\n","        # FILL IN HERE      # optimizer update\n","        optm.step()\n","        loss_val_sum += loss_out\n","    loss_val_avg = loss_val_sum/len(train_iter)\n","    # Print\n","    if ((epoch%print_every)==0) or (epoch==(EPOCHS-1)):\n","        train_accr = func_eval(C,train_iter,device)\n","        test_accr = func_eval(C,test_iter,device)\n","        print (\"epoch:[%d] loss:[%.3f] train_accr:[%.3f] test_accr:[%.3f].\"%\n","               (epoch,loss_val_avg,train_accr,test_accr))\n","print (\"Done\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Start training.\n","epoch:[0] loss:[0.596] train_accr:[0.960] test_accr:[0.962].\n","epoch:[1] loss:[0.170] train_accr:[0.977] test_accr:[0.977].\n","epoch:[2] loss:[0.122] train_accr:[0.981] test_accr:[0.981].\n","epoch:[3] loss:[0.100] train_accr:[0.982] test_accr:[0.981].\n","epoch:[4] loss:[0.088] train_accr:[0.987] test_accr:[0.985].\n","epoch:[5] loss:[0.082] train_accr:[0.988] test_accr:[0.985].\n","epoch:[6] loss:[0.074] train_accr:[0.989] test_accr:[0.986].\n","epoch:[7] loss:[0.068] train_accr:[0.990] test_accr:[0.988].\n","epoch:[8] loss:[0.062] train_accr:[0.992] test_accr:[0.988].\n","epoch:[9] loss:[0.057] train_accr:[0.992] test_accr:[0.988].\n","Done\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ceHT-OdujWMS"},"source":["### Test"]},{"cell_type":"code","metadata":{"id":"x1CZBbCwjMh7","colab":{"base_uri":"https://localhost:8080/","height":608},"executionInfo":{"status":"ok","timestamp":1612354819738,"user_tz":-540,"elapsed":2006,"user":{"displayName":"김경민","photoUrl":"","userId":"07831797358466108774"}},"outputId":"e6954ca2-ba10-48a3-e97b-c587487c4956"},"source":["n_sample = 25\n","sample_indices = np.random.choice(len(mnist_test.targets),n_sample,replace=False)\n","test_x = mnist_test.data[sample_indices]\n","test_y = mnist_test.targets[sample_indices]\n","with torch.no_grad():\n","    C.eval() # to evaluation mode \n","    y_pred = C.forward(test_x.view(-1,1,28,28).type(torch.float).to(device)/255.)\n","y_pred = y_pred.argmax(axis=1)\n","plt.figure(figsize=(10,10))\n","for idx in range(n_sample):\n","    plt.subplot(5, 5, idx+1)\n","    plt.imshow(test_x[idx], cmap='gray')\n","    plt.axis('off')\n","    plt.title(\"Pred:%d, Label:%d\"%(y_pred[idx],test_y[idx]))\n","plt.show()    \n","print (\"Done\")"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 25 Axes>"]},"metadata":{"tags":[],"image/png":{"width":569,"height":573},"needs_background":"light"}},{"output_type":"stream","text":["Done\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"i6poTCYZj4uM"},"source":[""],"execution_count":null,"outputs":[]}]}